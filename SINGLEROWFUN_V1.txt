--SQL Single-Row Functions_V1
--String Functions

--1.	Display the customer number, first name in lowercase and last name in uppercase for all customers whose customer number is
--in the range of 80 and 150.
SELECT CUSTOMER_ID, LOWER(FIRST_NAME), UPPER(LAST_NAME)
FROM CUSTOMERS
WHERE CUSTOMER_ID BETWEEN 80 AND 150;

--2.	Generating Email Addresses 
--a.	For all customers – display the last name, first name and email address. The email address will be composed from the first 
--letter of first name concatenated with three first letters of last name concatenated with the string “@mymail.com” 
--(For example: MANOJ KUMAR ? MKUM@mymail.com).
SELECT LAST_NAME, FIRST_NAME, CONCAT(CONCAT(SUBSTR(FIRST_NAME,1,1),SUBSTR(LAST_NAME,1,3)),'@mymail.com')
FROM customers;
--b.	For all customers – display the last name, first name and email address. The email address will be composed from the 
--first letter of first name concatenated with three last letters of last name concatenated with the string “@mymail.com” 
--(For example: MANOJ KUMAR ? MMAR@mymail.com).
SELECT LAST_NAME, FIRST_NAME, CONCAT(CONCAT(SUBSTR(FIRST_NAME,1,1),SUBSTR(LAST_NAME,1,3)),'@mymail.com')
FROM customers;
--b.	For all customers – display the last name, first name and email address. The email address will be composed from the 
--first letter of first name concatenated with three last letters of last name concatenated with the string “@mymail.com” 
--(For example: MANOJ KUMAR ? MMAR@mymail.com).
 SELECT LAST_NAME, FIRST_NAME, CONCAT(CONCAT(SUBSTR(FIRST_NAME,1,1),SUBSTR(LAST_NAME,LENGTH(LAST_NAME)-2,3)),'@mymail.com')
FROM customers;
--3.	Display the last name and the length of the last name for all customers where last name’s length is greater than 9 characters.
SELECT LAST_NAME,LENGTH(LAST_NAME)
FROM CUSTOMERS
WHERE LENGTH(LAST_NAME)>9;

--4.	Phone Numbers : 
--a.	Display the first name, last name, main phone number and a new phone number using the REPLACE function. In the new 
--phone number replace all occurrences of “515” with “$$$”.
SELECT FIRST_NAME, LAST_NAME, MAIN_PHONE_NUM, 
REPLACE(MAIN_PHONE_NUM,'515','$$$') AS NEW_PHONE_NUM
FROM CUSTOMERS;
--b.	Display the first name, last name, main phone number and new phone number using the REPLACE function. In the new 
--phone number replace all prefixes of “515” with “$$$” (only if the first 3 digits of the phone number contains the digits 
--“515” replace those digits with “$$$”).
SELECT FIRST_NAME, LAST_NAME, MAIN_PHONE_NUM,
REPLACE(SUBSTR(MAIN_PHONE_NUM,1,3),'515','$$$') || SUBSTR(MAIN_PHONE_NUM,4,12) AS NEW_PHONE_NUM
FROM CUSTOMERS;

--Numeric Functions

--5.	From customers table, for all customers, display : 
--a.	first name.
SELECT FIRST_NAME 
FROM CUSTOMERS;
--b.	monthly discount.
SELECT MONTHLY_DISCOUNT
FROM CUSTOMERS;
--c.	monthly discount after addition of 19.7%.
SELECT MONTHLY_DISCOUNT*1.197
FROM CUSTOMERS;
--d.	monthly discount after addition of 19.7%, expressed as a whole number (ROUND).
SELECT ROUND(MONTHLY_DISCOUNT*1.197)
FROM CUSTOMERS;
--e.	monthly discount after addition of 19.7%, round down to the nearest whole number (FLOOR).
SELECT FLOOR(MONTHLY_DISCOUNT*1.197)
FROM CUSTOMERS;
--f.	monthly discount after addition of 19.7%, round up to the nearest whole number (CEILING).
SELECT CEIL(MONTHLY_DISCOUNT*1.197)
FROM CUSTOMERS;

--Date Functions

--6.	From Customers table, for all customers, display the first name, join date, join date minus 10 days, join date plus one
--month and the date difference between join date and current date.
SELECT FIRST_NAME, JOIN_DATE, JOIN_DATE-10, ADD_MONTHS(JOIN_DATE,1),TRUNC(SYSDATE-JOIN_DATE) AS DATE_DIFF
FROM CUSTOMERS;

--7.	Display the first name, birthdate and age for all customers whose older than 50.
SELECT FIRST_NAME, BIRTH_DATE, TRUNC(TRUNC(SYSDATE-BIRTH_DATE)/365) AS AGE
FROM CUSTOMERS
WHERE EXTRACT(YEAR FROM SYSDATE)-EXTRACT(YEAR FROM BIRTH_DATE)>50;

--8.	Display all the data from Customers table, for all customers whose birthdate is today.
SELECT * 
FROM CUSTOMERS
WHERE EXTRACT(DAY FROM BIRTH_DATE)=EXTRACT(DAY FROM SYSDATE) 
AND EXTRACT(MONTH FROM BIRTH_DATE)=EXTRACT(MONTH FROM SYSDATE);

--9.	Display the first name, join date and the difference in years between join date and current date for all customers 
--where today have passed exactly 5 years since they joined the company.

SELECT FIRST_NAME, JOIN_DATE, TRUNC(SYSDATE-JOIN_DATE)
FROM CUSTOMERS
WHERE EXTRACT(YEAR FROM SYSDATE)-EXTRACT(YEAR FROM JOIN_DATE)=5;

--Conversion functions

--10.	Display the first name concatenated with the join date, and last name concatenated with the monthly discount, for all customers.
SELECT FIRST_NAME|| ' ' ||JOIN_DATE , LAST_NAME|| ' ' ||MONTHLY_DISCOUNT
FROM CUSTOMERS;

--11.	From Customers table, for all customers whose last name starts with a d or k, display: 
--a.	last name
SELECT LAST_NAME
FROM CUSTOMERS
WHERE SUBSTR(LAST_NAME,1,1)='D' OR SUBSTR(LAST_NAME,1,1)='K';
--b.	state in uppercase concatenated with customer number
SELECT CONCAT(UPPER(STATE),CUSTOMER_ID)
FROM CUSTOMERS
WHERE SUBSTR(LAST_NAME,1,1)='D' OR SUBSTR(LAST_NAME,1,1)='K';
--c.	join date concatenated with birthdate
SELECT CONCAT(JOIN_DATE,BIRTH_DATE)
FROM CUSTOMERS
WHERE SUBSTR(LAST_NAME,1,1)='D' OR SUBSTR(LAST_NAME,1,1)='K';
--in the WHERE clause instead of using LIKE, try to define the filtering condition using SUBSTRING.

--Null-Related Functions

--12.	Phone numbers report: 
--a.	Display the first name, last name, birth date, main phone number and secondary phone number for all customers whose 
--package number equals 27. Replace every null value in main phone number or in secondary phone number with ‘N/A’.
SELECT FIRST_NAME, LAST_NAME, BIRTH_DATE, NVL(MAIN_PHONE_NUM,'N/A'), NVL(SECONDARY_PHONE_NUM,'N/A')
FROM CUSTOMERS
WHERE PACK_ID=27;
--b.	Display the first name, last name, birth date, main phone number, secondary phone number for all customers who was born 
--on 1972. Replace every null value in main phone number or in secondary phone number with ‘N/A’.
SELECT FIRST_NAME, LAST_NAME, BIRTH_DATE, NVL(MAIN_PHONE_NUM,'N/A'), NVL(SECONDARY_PHONE_NUM,'N/A')
FROM CUSTOMERS
WHERE EXTRACT(YEAR FROM BIRTH_DATE)=1972;

--CASE Function

--13.	From Customers table, for all customers, display the first name, last name, monthly discount and a discount grade based 
--on these conditions : 
--a.	If the discount is between 0 and 10 – discount grade level is A.
--b.	If the discount is between 11 and 20 – discount grade level is B.
--c.	If the discount is between 21 and 30 – discount grade level is C.
--d.	for any other value – discount grade level is D.

SELECT FIRST_NAME, LAST_NAME, MONTHLY_DISCOUNT, 
CASE
WHEN MONTHLY_DISCOUNT BETWEEN 0 AND 10 THEN 'A'
WHEN MONTHLY_DISCOUNT BETWEEN 11 AND 20 THEN 'B'
WHEN MONTHLY_DISCOUNT BETWEEN 21 AND 30 THEN 'C'
ELSE 'D'
END
AS DISCOUNT_GRADE
FROM CUSTOMERS;
